#!/usr/bin/env python3
"""
Script para cargar datos de ejemplo en la base de datos de gesti√≥n de stock.
Ejecuta este script despu√©s de crear la base de datos para tener datos de prueba.
"""

import sys
import os

# Agregar el directorio del proyecto al path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import create_app
from app.database import db
from app.models.category import Category
from app.models.product import Product
from app.models.stock import Stock

def load_sample_data():
    """Carga datos de ejemplo en la base de datos"""
    
    print("üöÄ Cargando datos de ejemplo en la base de datos...")
    
    # Crear la aplicaci√≥n Flask
    app = create_app()
    
    with app.app_context():
        try:
            # Limpiar datos existentes (opcional)
            print("üßπ Limpiando datos existentes...")
            Stock.query.delete()
            Product.query.delete()
            Category.query.delete()
            db.session.commit()
            
            # Crear categor√≠as
            print("üìÇ Creando categor√≠as...")
            categories = [
                Category(name="Electr√≥nicos"),
                Category(name="Ropa"),
                Category(name="Hogar"),
                Category(name="Deportes"),
                Category(name="Libros"),
                Category(name="Juguetes"),
                Category(name="Alimentos"),
                Category(name="Belleza")
            ]
            
            for category in categories:
                db.session.add(category)
            
            db.session.commit()
            print(f"‚úÖ {len(categories)} categor√≠as creadas")
            
            # Crear productos
            print("üì¶ Creando productos...")
            products_data = [
                # Electr√≥nicos
                {
                    "name": "Laptop Gaming ASUS ROG",
                    "description": "Laptop para juegos de alto rendimiento con RTX 4060",
                    "price": 1299.99,
                    "category_name": "Electr√≥nicos",
                    "min_stock": 5
                },
                {
                    "name": "Smartphone Samsung Galaxy S24",
                    "description": "Tel√©fono inteligente con c√°mara de 200MP",
                    "price": 899.99,
                    "category_name": "Electr√≥nicos",
                    "min_stock": 10
                },
                {
                    "name": "Auriculares Sony WH-1000XM5",
                    "description": "Auriculares inal√°mbricos con cancelaci√≥n de ruido",
                    "price": 349.99,
                    "category_name": "Electr√≥nicos",
                    "min_stock": 8
                },
                
                # Ropa
                {
                    "name": "Camiseta Nike Dri-FIT",
                    "description": "Camiseta deportiva de secado r√°pido",
                    "price": 29.99,
                    "category_name": "Ropa",
                    "min_stock": 50
                },
                {
                    "name": "Jeans Levi's 501",
                    "description": "Jeans cl√°sicos de alta calidad",
                    "price": 79.99,
                    "category_name": "Ropa",
                    "min_stock": 25
                },
                {
                    "name": "Zapatillas Adidas Ultraboost",
                    "description": "Zapatillas de running con tecnolog√≠a Boost",
                    "price": 189.99,
                    "category_name": "Ropa",
                    "min_stock": 15
                },
                
                # Hogar
                {
                    "name": "Cafetera Nespresso Vertuo",
                    "description": "Cafetera autom√°tica con c√°psulas",
                    "price": 199.99,
                    "category_name": "Hogar",
                    "min_stock": 12
                },
                {
                    "name": "Aspiradora Dyson V15",
                    "description": "Aspiradora inal√°mbrica con l√°ser",
                    "price": 699.99,
                    "category_name": "Hogar",
                    "min_stock": 6
                },
                {
                    "name": "Sart√©n Antiadherente Tefal",
                    "description": "Sart√©n de 28cm con revestimiento antiadherente",
                    "price": 39.99,
                    "category_name": "Hogar",
                    "min_stock": 30
                },
                
                # Deportes
                {
                    "name": "Pelota de F√∫tbol Nike",
                    "description": "Pelota oficial de competici√≥n",
                    "price": 89.99,
                    "category_name": "Deportes",
                    "min_stock": 20
                },
                {
                    "name": "Raqueta de Tenis Wilson",
                    "description": "Raqueta profesional con encordado",
                    "price": 159.99,
                    "category_name": "Deportes",
                    "min_stock": 12
                },
                {
                    "name": "Bicicleta de Spinning",
                    "description": "Bicicleta est√°tica para entrenamiento indoor",
                    "price": 299.99,
                    "category_name": "Deportes",
                    "min_stock": 8
                },
                
                # Libros
                {
                    "name": "El Se√±or de los Anillos",
                    "description": "Trilog√≠a completa de J.R.R. Tolkien",
                    "price": 49.99,
                    "category_name": "Libros",
                    "min_stock": 25
                },
                {
                    "name": "Cien A√±os de Soledad",
                    "description": "Obra maestra de Gabriel Garc√≠a M√°rquez",
                    "price": 19.99,
                    "category_name": "Libros",
                    "min_stock": 40
                },
                {
                    "name": "Harry Potter y la Piedra Filosofal",
                    "description": "Primera entrega de la saga de J.K. Rowling",
                    "price": 24.99,
                    "category_name": "Libros",
                    "min_stock": 35
                },
                
                # Juguetes
                {
                    "name": "LEGO Star Wars Millennium Falcon",
                    "description": "Set de construcci√≥n con 1329 piezas",
                    "price": 159.99,
                    "category_name": "Juguetes",
                    "min_stock": 10
                },
                {
                    "name": "Nintendo Switch OLED",
                    "description": "Consola de videojuegos port√°til",
                    "price": 349.99,
                    "category_name": "Juguetes",
                    "min_stock": 15
                },
                {
                    "name": "Peluche Gigante de Oso",
                    "description": "Oso de peluche de 1.5 metros",
                    "price": 79.99,
                    "category_name": "Juguetes",
                    "min_stock": 8
                },
                
                # Alimentos
                {
                    "name": "Caf√© Colombiano Premium",
                    "description": "Caf√© 100% ar√°bica de altura",
                    "price": 24.99,
                    "category_name": "Alimentos",
                    "min_stock": 100
                },
                {
                    "name": "Chocolate Lindt Excellence",
                    "description": "Chocolate negro 70% cacao",
                    "price": 4.99,
                    "category_name": "Alimentos",
                    "min_stock": 200
                },
                {
                    "name": "Aceite de Oliva Extra Virgen",
                    "description": "Aceite de oliva espa√±ol de primera prensada",
                    "price": 19.99,
                    "category_name": "Alimentos",
                    "min_stock": 80
                },
                
                # Belleza
                {
                    "name": "Crema Hidratante La Mer",
                    "description": "Crema facial de lujo con algas marinas",
                    "price": 349.99,
                    "category_name": "Belleza",
                    "min_stock": 20
                },
                {
                    "name": "Perfume Chanel N¬∞5",
                    "description": "Perfume ic√≥nico de la casa Chanel",
                    "price": 129.99,
                    "category_name": "Belleza",
                    "min_stock": 15
                },
                {
                    "name": "Set de Brochas MAC",
                    "description": "Set completo de brochas profesionales",
                    "price": 89.99,
                    "category_name": "Belleza",
                    "min_stock": 25
                }
            ]
            
            products_created = 0
            for product_data in products_data:
                # Buscar la categor√≠a por nombre
                category = Category.query.filter_by(name=product_data["category_name"]).first()
                if category:
                    product = Product(
                        name=product_data["name"],
                        description=product_data["description"],
                        price=product_data["price"],
                        category_id=category.id
                    )
                    db.session.add(product)
                    db.session.flush()  # Para obtener el ID del producto
                    
                    # Crear registro de stock
                    stock = Stock(
                        product_id=product.id,
                        quantity=product_data["min_stock"] + 10,  # Stock inicial por encima del m√≠nimo
                        min_stock=product_data["min_stock"]
                    )
                    db.session.add(stock)
                    products_created += 1
            
            db.session.commit()
            print(f"‚úÖ {products_created} productos creados con stock inicial")
            
            print("\nüéâ ¬°Datos de ejemplo cargados exitosamente!")
            print(f"üìä Resumen:")
            print(f"   - Categor√≠as: {len(categories)}")
            print(f"   - Productos: {products_created}")
            print(f"   - Registros de stock: {products_created}")
            
        except Exception as e:
            print(f"‚ùå Error cargando datos: {e}")
            db.session.rollback()
            raise

if __name__ == "__main__":
    load_sample_data() 