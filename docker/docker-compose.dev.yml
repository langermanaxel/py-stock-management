# Docker Compose para Desarrollo
# Configuración optimizada para desarrollo local

version: '3.8'

services:
  # =============================================================================
  # Aplicación Web en Modo Desarrollo
  # =============================================================================
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: stock_management_dev
    ports:
      - "5000:5000"
      - "5001:5001"  # Puerto adicional para debugging
    
    environment:
      # Configuración de desarrollo
      - FLASK_APP=run.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DEBUG=true
      
      # Configuración de base de datos
      - SQLALCHEMY_DATABASE_URI=sqlite:///instance/stock_management_dev.db
      - SQLALCHEMY_TRACK_MODIFICATIONS=true
      
      # Configuración JWT (claves de desarrollo)
      - JWT_SECRET_KEY=dev-jwt-secret-key-change-in-production
      - SECRET_KEY=dev-secret-key-change-in-production
      
      # Configuración de logging
      - LOG_LEVEL=DEBUG
      - LOG_FILE=logs/app_dev.log
      
      # Configuración de CORS (más permisiva en desarrollo)
      - CORS_ORIGINS=http://localhost:3000,http://localhost:5000,http://localhost:8080
      
      # Hot reload habilitado
      - WATCHDOG_ENABLED=true
      
    volumes:
      # Montar código fuente para hot reload
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
      - /app/instance
      
      # Volumen para logs
      - ./logs:/app/logs
      
    restart: unless-stopped
    
    # Comando para desarrollo con hot reload
    command: python -m flask run --host=0.0.0.0 --port=5000 --reload
    
    # Health check más frecuente en desarrollo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # =============================================================================
  # Base de Datos de Desarrollo (SQLite montado)
  # =============================================================================
  # No necesitamos servicio separado para SQLite en desarrollo
  # La base de datos se monta directamente desde el host

  # =============================================================================
  # Redis para Desarrollo (opcional)
  # =============================================================================
  redis-dev:
    image: redis:7-alpine
    container_name: stock_management_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --loglevel verbose

  # =============================================================================
  # Adminer para gestión de base de datos (opcional)
  # =============================================================================
  adminer:
    image: adminer:latest
    container_name: stock_management_adminer
    ports:
      - "8080:8080"
    restart: unless-stopped
    environment:
      - ADMINER_DEFAULT_SERVER=web
      - ADMINER_DESIGN=pepa-linha-dark

volumes:
  redis_dev_data:
    driver: local

networks:
  default:
    name: stock_management_dev_network
    driver: bridge
